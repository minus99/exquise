//font-face
@mixin fontFace($family, $url, $fontWeight: normal, $fontStyle: normal) {
    @font-face {
        font-family: $family;
        src:    url(#{$baseHref + $url + '.woff2'}) format('woff2'),
                url(#{$baseHref + $url + '.woff'}) format('woff'),
                url(#{$baseHref + $url + '.ttf'}) format('truetype');
        font-weight: $fontWeight;
        font-style: $fontStyle; 
        font-display: swap;  
    }
} 


//@media
@mixin setMediaScreen($feature, $value) {
    @media screen and (#{$feature}: #{$value}) { 
        @content;
    }
}

@mixin setMediaPrint {
    @media print {
        @content;
    }
}

//grid-area
@mixin setGridArea($first, $last) {
    @for $i from $first through $last {
        > .ga#{$i} {
            grid-area: ga#{$i};
        }
    }
}

//cover object
@mixin ems-cover {
	position: absolute;
	left: 0;
    top: 0;
	width: 100%;
    height: 100%;
    background: none;
    border: none; 
    > * {
        display: none; 
    }
}

//curve
@mixin setCurve($skewX, $translateX) {
    transform: skewX(#{$skewX}deg) translateX(#{$translateX}px);
}

//rotate
@mixin setTurn($rotate) {
    transform: rotate(#{$rotate}deg)
}

//mirror
@mixin turn-mirror {
    transform: scale(-1);
}

//height
@mixin setHeight($imgW, $imgH, $container) {
    height: calc(#{$container} / (#{$imgW} / #{$imgH}));
}

// vertical align
@mixin center($horizontal: true, $vertical: true) {
  position: absolute;

  @if ($horizontal and $vertical) {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

  } @else if ($horizontal) {
    left: 50%;
    transform: translate(-50%, 0);

  } @else if ($vertical) {
    top: 50%;
    transform: translate(0, -50%);
  }
}
 
// Loop from 1-9.

// Orn: animation: .5s ease 0s pulseLook; animation-fill-mode: both;

@for $i from 1 through 99 {
    .subProduct li, .mini-user-sub div {   
      
      // :nth-child(1-9) 
      &:nth-child(#{$i}) { 
        
        // Delay the animation. Delay increases as items loop.
        animation-delay: $i * (.1s / 1) !important;
      }
    }
  } 
  
  @keyframes pulseLook {
    0% {
      opacity: 0;
      left: 10px;
    }
    
    100% {
        opacity: 1;
        left: 0;
    }
}

@keyframes alphaTop {
    0% {
      opacity: 0;
      top: 5px;
    }
    
    100% {
        opacity: 1;
        top: 0;
    }
}

@keyframes imgZoom {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.1);
    }
    100% {
        transform: scale(1.2);
    }
}

// Transition

@mixin transition($transition...) {
    -moz-transition:    $transition;
    -o-transition:      $transition;
    -webkit-transition: $transition;
    transition:         $transition;
}
@mixin transition-property($property...) {
    -moz-transition-property:    $property;
    -o-transition-property:      $property;
    -webkit-transition-property: $property;
    transition-property:         $property;
}
@mixin transition-duration($duration...) {
    -moz-transition-property:    $duration;
    -o-transition-property:      $duration;
    -webkit-transition-property: $duration;
    transition-property:         $duration;
}
@mixin transition-timing-function($timing...) {
    -moz-transition-timing-function:    $timing;
    -o-transition-timing-function:      $timing;
    -webkit-transition-timing-function: $timing;
    transition-timing-function:         $timing;
}
@mixin transition-delay($delay...) {
    -moz-transition-delay:    $delay;
    -o-transition-delay:      $delay;
    -webkit-transition-delay: $delay;
    transition-delay:         $delay;
}

// orn: @include transition(all .4s, color .4s);